symbolic.min_int=-2147483648
symbolic.min_long=-9223372036854775808
symbolic.min_short=-32768
symbolic.min_byte=-128
symbolic.min_char=0
symbolic.max_int=2147483647
symbolic.max_long=9223372036854775807
symbolic.max_short=32767
symbolic.max_byte=127
symbolic.max_char=65535
symbolic.min_double=4.9E-324
symbolic.max_double=1.7976931348623157E308
JavaPathfinder core system v8.0 - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
sequences.BankAccountDriverSequences.main()

====================================================== search started: 10/9/19 3:25 AM
Path Condition: constraint # = 3
amount_3_SYMINT > CONST_0 &&
amount_2_SYMINT > CONST_0 &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_3_SYMINT <= CONST_0 &&
amount_2_SYMINT > CONST_0 &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_4_SYMINT > (amount_2_SYMINT + amount_1_SYMINT) &&
amount_2_SYMINT > CONST_0 &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_4_SYMINT <= (amount_2_SYMINT + amount_1_SYMINT) &&
amount_2_SYMINT > CONST_0 &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_5_SYMINT > CONST_0 &&
amount_2_SYMINT <= CONST_0 &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_5_SYMINT <= CONST_0 &&
amount_2_SYMINT <= CONST_0 &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_6_SYMINT > amount_1_SYMINT &&
amount_2_SYMINT <= CONST_0 &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_6_SYMINT <= amount_1_SYMINT &&
amount_2_SYMINT <= CONST_0 &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_8_SYMINT > CONST_0 &&
amount_7_SYMINT > amount_1_SYMINT &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_8_SYMINT <= CONST_0 &&
amount_7_SYMINT > amount_1_SYMINT &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_9_SYMINT > amount_1_SYMINT &&
amount_7_SYMINT > amount_1_SYMINT &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_9_SYMINT <= amount_1_SYMINT &&
amount_7_SYMINT > amount_1_SYMINT &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_10_SYMINT > CONST_0 &&
amount_7_SYMINT <= amount_1_SYMINT &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_10_SYMINT <= CONST_0 &&
amount_7_SYMINT <= amount_1_SYMINT &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 2
amount_7_SYMINT <= amount_1_SYMINT &&
amount_1_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_13_SYMINT > CONST_0 &&
amount_12_SYMINT > CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_13_SYMINT <= CONST_0 &&
amount_12_SYMINT > CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_14_SYMINT > amount_12_SYMINT &&
amount_12_SYMINT > CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_14_SYMINT <= amount_12_SYMINT &&
amount_12_SYMINT > CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_15_SYMINT > CONST_0 &&
amount_12_SYMINT <= CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_15_SYMINT <= CONST_0 &&
amount_12_SYMINT <= CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_16_SYMINT > CONST_0 &&
amount_12_SYMINT <= CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_16_SYMINT <= CONST_0 &&
amount_12_SYMINT <= CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_18_SYMINT > CONST_0 &&
amount_17_SYMINT > CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_18_SYMINT <= CONST_0 &&
amount_17_SYMINT > CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_19_SYMINT > CONST_0 &&
amount_17_SYMINT > CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_19_SYMINT <= CONST_0 &&
amount_17_SYMINT > CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_20_SYMINT > CONST_0 &&
amount_17_SYMINT <= CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_20_SYMINT <= CONST_0 &&
amount_17_SYMINT <= CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_21_SYMINT > (CONST_0 - amount_17_SYMINT) &&
amount_17_SYMINT <= CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_21_SYMINT <= (CONST_0 - amount_17_SYMINT) &&
amount_17_SYMINT <= CONST_0 &&
amount_1_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_24_SYMINT > CONST_0 &&
amount_23_SYMINT > CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_24_SYMINT <= CONST_0 &&
amount_23_SYMINT > CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_25_SYMINT > amount_23_SYMINT &&
amount_23_SYMINT > CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_25_SYMINT <= amount_23_SYMINT &&
amount_23_SYMINT > CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_26_SYMINT > CONST_0 &&
amount_23_SYMINT <= CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_26_SYMINT <= CONST_0 &&
amount_23_SYMINT <= CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_27_SYMINT > CONST_0 &&
amount_23_SYMINT <= CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_27_SYMINT <= CONST_0 &&
amount_23_SYMINT <= CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_29_SYMINT > CONST_0 &&
amount_28_SYMINT > CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_29_SYMINT <= CONST_0 &&
amount_28_SYMINT > CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_30_SYMINT > CONST_0 &&
amount_28_SYMINT > CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_30_SYMINT <= CONST_0 &&
amount_28_SYMINT > CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_31_SYMINT > CONST_0 &&
amount_28_SYMINT <= CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_31_SYMINT <= CONST_0 &&
amount_28_SYMINT <= CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_32_SYMINT > (CONST_0 - amount_28_SYMINT) &&
amount_28_SYMINT <= CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_32_SYMINT <= (CONST_0 - amount_28_SYMINT) &&
amount_28_SYMINT <= CONST_0 &&
amount_22_SYMINT > CONST_0

Path Condition: constraint # = 3
amount_34_SYMINT > CONST_0 &&
amount_33_SYMINT > CONST_0 &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_34_SYMINT <= CONST_0 &&
amount_33_SYMINT > CONST_0 &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_35_SYMINT > (amount_33_SYMINT + (CONST_0 - amount_22_SYMINT)) &&
amount_33_SYMINT > CONST_0 &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_35_SYMINT <= (amount_33_SYMINT + (CONST_0 - amount_22_SYMINT)) &&
amount_33_SYMINT > CONST_0 &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_36_SYMINT > CONST_0 &&
amount_33_SYMINT <= CONST_0 &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_36_SYMINT <= CONST_0 &&
amount_33_SYMINT <= CONST_0 &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_37_SYMINT > (CONST_0 - amount_22_SYMINT) &&
amount_33_SYMINT <= CONST_0 &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_37_SYMINT <= (CONST_0 - amount_22_SYMINT) &&
amount_33_SYMINT <= CONST_0 &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_39_SYMINT > CONST_0 &&
amount_38_SYMINT > (CONST_0 - amount_22_SYMINT) &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_39_SYMINT <= CONST_0 &&
amount_38_SYMINT > (CONST_0 - amount_22_SYMINT) &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 2
amount_38_SYMINT > (CONST_0 - amount_22_SYMINT) &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_41_SYMINT > CONST_0 &&
amount_38_SYMINT <= (CONST_0 - amount_22_SYMINT) &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 3
amount_41_SYMINT <= CONST_0 &&
amount_38_SYMINT <= (CONST_0 - amount_22_SYMINT) &&
amount_22_SYMINT <= CONST_0

Path Condition: constraint # = 2
amount_38_SYMINT <= (CONST_0 - amount_22_SYMINT) &&
amount_22_SYMINT <= CONST_0


====================================================== Method Sequences
[deposit(2147483647), deposit(2147483647), deposit(2147483647)]
[deposit(2147483647), deposit(2147483647), deposit(-2147483648)]
[deposit(2147483647), deposit(2147483647)]
[deposit(1), deposit(1), withdraw(3)]
[deposit(2147483647), deposit(2147483647), withdraw(2147483647)]
[deposit(2147483647), deposit(-2147483648), deposit(2147483647)]
[deposit(2147483647), deposit(-2147483648), deposit(-2147483648)]
[deposit(2147483647), deposit(-2147483648)]
[deposit(2147483647), deposit(-2147483648), withdraw(2147483647)]
[deposit(2147483647), deposit(-2147483648), withdraw(-2147483648)]
[deposit(2147483647)]
[deposit(2147483647), withdraw(2147483647), deposit(2147483647)]
[deposit(2147483647), withdraw(2147483647), deposit(-2147483648)]
[deposit(2147483647), withdraw(2147483647)]
[deposit(2147483647), withdraw(2147483647), withdraw(2147483647)]
[deposit(2147483647), withdraw(2147483647), withdraw(-2147483648)]
[deposit(2147483647), withdraw(-2147483648), deposit(2147483647)]
[deposit(2147483647), withdraw(-2147483648), deposit(-2147483648)]
[deposit(2147483647), withdraw(-2147483648)]
[deposit(2147483647), withdraw(-2147483648), withdraw(-9223372036854775808)]
[deposit(-2147483648), deposit(2147483647), deposit(2147483647)]
[deposit(-2147483648), deposit(2147483647), deposit(-2147483648)]
[deposit(-2147483648), deposit(2147483647)]
[deposit(-2147483648), deposit(2147483647), withdraw(2147483647)]
[deposit(-2147483648), deposit(2147483647), withdraw(-2147483648)]
[deposit(-2147483648), deposit(-2147483648), deposit(2147483647)]
[deposit(-2147483648), deposit(-2147483648), deposit(-2147483648)]
[deposit(-2147483648), deposit(-2147483648)]
[deposit(-2147483648), deposit(-2147483648), withdraw(2147483647)]
[deposit(-2147483648), deposit(-2147483648), withdraw(-2147483648)]
[deposit(-2147483648)]
[deposit(-2147483648), withdraw(2147483647), deposit(2147483647)]
[deposit(-2147483648), withdraw(2147483647), deposit(-2147483648)]
[deposit(-2147483648), withdraw(2147483647)]
[deposit(-2147483648), withdraw(2147483647), withdraw(2147483647)]
[deposit(-2147483648), withdraw(2147483647), withdraw(-2147483648)]
[deposit(-2147483648), withdraw(-2147483648), deposit(2147483647)]
[deposit(-2147483648), withdraw(-2147483648), deposit(-2147483648)]
[deposit(-2147483648), withdraw(-2147483648)]
[deposit(-2147483648), withdraw(-2147483648), withdraw(-2147483648)]
[withdraw(2147483647), deposit(2147483647), deposit(2147483647)]
[withdraw(2147483647), deposit(2147483647), deposit(-2147483648)]
[withdraw(2147483647), deposit(2147483647)]
[withdraw(2147483647), deposit(2147483647), withdraw(2147483647)]
[withdraw(2147483647), deposit(2147483647), withdraw(-2147483648)]
[withdraw(2147483647), deposit(-2147483648), deposit(2147483647)]
[withdraw(2147483647), deposit(-2147483648), deposit(-2147483648)]
[withdraw(2147483647), deposit(-2147483648)]
[withdraw(2147483647), deposit(-2147483648), withdraw(2147483647)]
[withdraw(2147483647), deposit(-2147483648), withdraw(-2147483648)]
[withdraw(2147483647)]
[withdraw(2147483647), withdraw(2147483647), deposit(2147483647)]
[withdraw(2147483647), withdraw(2147483647), deposit(-2147483648)]
[withdraw(2147483647), withdraw(2147483647)]
[withdraw(2147483647), withdraw(2147483647), withdraw(2147483647)]
[withdraw(2147483647), withdraw(2147483647), withdraw(-2147483648)]
[withdraw(2147483647), withdraw(-2147483648), deposit(2147483647)]
[withdraw(2147483647), withdraw(-2147483648), deposit(-2147483648)]
[withdraw(2147483647), withdraw(-2147483648)]
[withdraw(2147483647), withdraw(-2147483648), withdraw(-2147483648)]
[withdraw(-2147483648), deposit(2147483647), deposit(2147483647)]
[withdraw(-2147483648), deposit(2147483647), deposit(-2147483648)]
[withdraw(-2147483648), deposit(2147483647)]
[withdraw(-2147483648), deposit(2147483647), withdraw(-2147483648)]
[withdraw(-2147483648), deposit(-2147483648), deposit(2147483647)]
[withdraw(-2147483648), deposit(-2147483648), deposit(-2147483648)]
[withdraw(-2147483648), deposit(-2147483648)]
[withdraw(-2147483648), deposit(-2147483648), withdraw(-2147483648)]
[withdraw(-2147483648)]
[withdraw(2147483647), withdraw(2147483647), withdraw(-9223372036854775808)]
[withdraw(-2147483648), withdraw(-2147483648), deposit(2147483647)]
[withdraw(-2147483648), withdraw(-2147483648), deposit(-2147483648)]
[withdraw(-2147483648), withdraw(-2147483648)]
[withdraw(-2147483648), withdraw(-2147483648), withdraw(-9223372036854775808)]

====================================================== JUnit 4.0 test class
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

public class sequences_BankAccountTest {

	private sequences.BankAccount sequences_bankaccount;

	@Before
	public void setUp() throws Exception {
		sequences_bankaccount = new sequences.BankAccount();
	}

	@Test
	public void test0() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test1() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test2() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test3() {
		sequences_bankaccount.deposit(1);
		sequences_bankaccount.deposit(1);
		sequences_bankaccount.withdraw(3);
	}

	@Test
	public void test4() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test5() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test6() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test7() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test8() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test9() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test10() {
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test11() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test12() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test13() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test14() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test15() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test16() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test17() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test18() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test19() {
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.withdraw(-9223372036854775808);
	}

	@Test
	public void test20() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test21() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test22() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test23() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test24() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test25() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test26() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test27() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test28() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test29() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test30() {
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test31() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test32() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test33() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test34() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test35() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test36() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test37() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test38() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test39() {
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test40() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test41() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test42() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test43() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test44() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test45() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test46() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test47() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test48() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test49() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test50() {
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test51() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test52() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test53() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test54() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(2147483647);
	}

	@Test
	public void test55() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test56() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test57() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test58() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test59() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test60() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test61() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test62() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test63() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(2147483647);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test64() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test65() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test66() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test67() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test68() {
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test69() {
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(2147483647);
		sequences_bankaccount.withdraw(-9223372036854775808);
	}

	@Test
	public void test70() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(2147483647);
	}

	@Test
	public void test71() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.deposit(-2147483648);
	}

	@Test
	public void test72() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
	}

	@Test
	public void test73() {
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.withdraw(-2147483648);
		sequences_bankaccount.withdraw(-9223372036854775808);
	}
}

====================================================== coverage statistics

-------------------------------------------- class coverage ------------------------------------------------
bytecode            line                basic-block         branch              methods             location
------------------------------------------------------------------------------------------------------------
0.83 (43/52)        0.80 (12/15)        0.72 (13/18)        0.40 (2/5)          1.00 (4/4)          sequences.BankAccount
  0.75 (6/8)          0.00 (0/1)          0.80 (4/5)          0.00 (0/1)           -                  <clinit>()
                                                                                    at sequences.BankAccount.<clinit>(BankAccount.java:30) 
                                                                                    T at sequences.BankAccount.<clinit>(BankAccount.java:30) 
  0.76 (22/29)        0.75 (6/8)          0.50 (4/8)          0.33 (1/3)           -                  withdraw(int)
                                                                                    at sequences.BankAccount.withdraw(BankAccount.java:53) 
                                                                                    .. sequences.BankAccount.withdraw(BankAccount.java:55) 
                                                                                    at sequences.BankAccount.withdraw(BankAccount.java:48) 
                                                                                    T at sequences.BankAccount.withdraw(BankAccount.java:52) 
                                                                                    N at sequences.BankAccount.withdraw(BankAccount.java:53) 
  1.00 (6/6)          1.00 (3/3)          1.00 (2/2)           -                   -                  <init>(int)
  1.00 (9/9)          1.00 (3/3)          1.00 (3/3)          1.00 (1/1)           -                  deposit(int)

------------------------------------------------------------------------------------------------------------
0.83 (43/52)        0.80 (12/15)        0.72 (13/18)        0.40 (2/5)          1.00 (4/4)          1.00 (1/1)         total

====================================================== results
no errors detected

====================================================== statistics
elapsed time:       00:00:01
states:             new=163,visited=0,backtracked=163,end=61
search:             maxDepth=10,constraints=0
choice generators:  thread=1 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=102
heap:               new=663,released=612,maxLive=356,gcCycles=100
instructions:       6368
max memory:         240MB
loaded code:        classes=63,methods=1430

====================================================== search finished: 10/9/19 3:25 AM
